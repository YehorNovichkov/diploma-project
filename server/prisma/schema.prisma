generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  email      String?  @unique
  name       String
  surname    String
  patronymic String
  password   String?
  student    Student?
  teacher    Teacher?
  parent     Parent?
  admin      Admin?
}

model Student {
  id                  String               @id @default(uuid())
  user                User                 @relation(fields: [userId], references: [id])
  userId              String               @unique
  class               Class?               @relation(fields: [classId], references: [id])
  classId             Int?
  parent              Parent?              @relation(fields: [parentId], references: [id])
  parentId            String?
  studentsTaskAnswers StudentsTaskAnswer[]
  TaskAnswer          TaskAnswer[]

  @@index([userId])
  @@index([classId])
  @@index([parentId])
}

model Teacher {
  id       String    @id @default(uuid())
  user     User      @relation(fields: [userId], references: [id])
  userId   String    @unique
  classes  Class[]
  subjects Subject[]

  @@index([userId])
}

model Parent {
  id       String    @id @default(uuid())
  user     User      @relation(fields: [userId], references: [id])
  userId   String    @unique
  students Student[]

  @@index([userId])
}

model Admin {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@index([userId])
}

model Class {
  id       Int       @id @default(autoincrement())
  name     String
  students Student[]
  teacher  Teacher   @relation(fields: [userId], references: [id])
  userId   String
  subjects Subject[]
  tasks    Task[]
  tests    Test[]

  @@index([userId])
}

model Subject {
  id       Int       @id @default(autoincrement())
  name     String
  classes  Class[]
  teachers Teacher[]
  tasks    Task[]
  tests    Test[]
}

model Task {
  id                  Int                  @id @default(autoincrement())
  created_at          DateTime             @default(now())
  name                String
  description         String
  deadline            DateTime
  files               String[]
  answerTypes         AnswerType[]
  subject             Subject              @relation(fields: [subjectId], references: [id])
  subjectId           Int
  class               Class                @relation(fields: [classId], references: [id])
  classId             Int
  studentsTaskAnswers StudentsTaskAnswer[]
  taskAnswers         TaskAnswer[]

  @@index([subjectId])
  @@index([classId])
}

enum AnswerType {
  TEXT
  FILE
}

model TaskAnswer {
  id        Int     @id @default(autoincrement())
  text      String?
  file      String?
  task      Task    @relation(fields: [taskId], references: [id])
  taskId    Int
  student   Student @relation(fields: [studentId], references: [id])
  studentId String

  @@index([taskId])
  @@index([studentId])
}

model StudentsTaskAnswer {
  id        Int     @id @default(autoincrement())
  text      String?
  file      String?
  student   Student @relation(fields: [studentId], references: [id])
  studentId String
  task      Task    @relation(fields: [taskId], references: [id])
  taskId    Int

  @@index([studentId])
  @@index([taskId])
}

model Test {
  id          Int            @id @default(autoincrement())
  created_at  DateTime       @default(now())
  name        String
  description String
  deadline    DateTime
  subject     Subject        @relation(fields: [subjectId], references: [id])
  subjectId   Int
  class       Class          @relation(fields: [classId], references: [id])
  classId     Int
  questions   TestQuestion[]

  @@index([subjectId])
  @@index([classId])
}

model TestQuestion {
  id           Int          @id @default(autoincrement())
  text         String
  file         String?
  testAnswers  TestAnswer[]
  manualAnswer String?
  test         Test         @relation(fields: [testId], references: [id])
  testId       Int

  @@index([testId])
}

model TestAnswer {
  id         Int          @id @default(autoincrement())
  text       String
  file       String?
  isCorrect  Boolean
  question   TestQuestion @relation(fields: [questionId], references: [id])
  questionId Int

  @@index([questionId])
}
