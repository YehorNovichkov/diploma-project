generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  email        String?      @unique
  name         String
  surname      String
  patronymic   String
  passwordHash String?
  roles        String[]
  // Student fields
  classId      Int?
  class        Class?       @relation(fields: [classId], references: [id])
  parentId     String?
  parent       User?        @relation("ParentToChildren", fields: [parentId], references: [id])
  TaskAnswer   TaskAnswer[]
  // Parent fields
  children     User[]       @relation("ParentToChildren")
}

model Class {
  id       Int       @id @default(autoincrement())
  name     String
  students User[]
  subjects Subject[]
  tasks    Task[]
  tests    Test[]
}

model Subject {
  id      Int     @id @default(autoincrement())
  name    String
  classes Class[]
  tasks   Task[]
  tests   Test[]
}

model Task {
  id          Int          @id @default(autoincrement())
  created_at  DateTime     @default(now())
  name        String
  description String
  deadline    DateTime
  files       String[]
  subject     Subject      @relation(fields: [subjectId], references: [id])
  subjectId   Int
  class       Class        @relation(fields: [classId], references: [id])
  classId     Int
  taskAnswers TaskAnswer[]

  @@index([subjectId])
  @@index([classId])
}

model TaskAnswer {
  id        Int     @id @default(autoincrement())
  text      String?
  file      String?
  task      Task    @relation(fields: [taskId], references: [id])
  taskId    Int
  student   User    @relation(fields: [studentId], references: [id])
  studentId String

  @@index([taskId])
  @@index([studentId])
}

model Test {
  id          Int            @id @default(autoincrement())
  created_at  DateTime       @default(now())
  name        String
  description String
  deadline    DateTime
  subject     Subject        @relation(fields: [subjectId], references: [id])
  subjectId   Int
  class       Class          @relation(fields: [classId], references: [id])
  classId     Int
  questions   TestQuestion[]

  @@index([subjectId])
  @@index([classId])
}

model TestQuestion {
  id           Int          @id @default(autoincrement())
  text         String
  file         String?
  testAnswers  TestAnswer[]
  manualAnswer String?
  test         Test         @relation(fields: [testId], references: [id])
  testId       Int

  @@index([testId])
}

model TestAnswer {
  id         Int          @id @default(autoincrement())
  text       String
  file       String?
  isCorrect  Boolean
  question   TestQuestion @relation(fields: [questionId], references: [id])
  questionId Int

  @@index([questionId])
}
